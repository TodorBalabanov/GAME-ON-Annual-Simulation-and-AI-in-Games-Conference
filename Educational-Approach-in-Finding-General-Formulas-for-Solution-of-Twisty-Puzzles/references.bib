@misc{Balabanov2015,
  author       = "Balabanov, Todor",
  title        = "Fish Rings",
  howpublished = "Velbazhd Software LLC",
  year         = "2015",
  url          = "https://play.google.com/store/apps/details?id=eu.veldsoft.fish.rings"
}

@misc{Balabanov2024a,
  author       = "Balabanov, Todor",
  title        = "Fish Rings Puzzle Formula Generator",
  howpublished = "ResearchGate GmbH",
  year         = "2024",
  doi          = "10.13140/RG.2.2.14834.89289"
}

@misc{Balabanov2024b,
  author       = "Balabanov, Todor",
  title        = "List of Formulas for Fish Rings Puzzle which Change Only Two Pieces - Length of the Formulas from Four to Seven",
  howpublished = "ResearchGate GmbH",
  year         = "2024",
  doi          = "10.13140/RG.2.2.25609.01120"
}

@Article{Archer2007,
  author="Archer, Aaron",
  title="The 15 puzzle: how it drove the world crazy",
  journal="The Mathematical Intelligencer",
  year="2007",
  month="Mar",
  day="01",
  volume="29",
  number="2",
  pages="83-85",
  issn="0343-6993",
  doi="10.1007/BF02986216",
  url="https://doi.org/10.1007/BF02986216"
}

@InProceedings{10.1007/3-540-44683-4_3,
author="Demaine, Erik D.",
editor="Sgall, Ji{\v{r}}{\'i}
and Pultr, Ale{\v{s}}
and Kolman, Petr",
title="Playing Games with Algorithms: Algorithmic Combinatorial Game Theory",
booktitle="Mathematical Foundations of Computer Science 2001",
year="2001",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="18--33",
abstract="Combinatorial games lead to several interesting, clean problems in algorithms and complexity theory, many of which remain open. The purpose of this paper is to provide an overview of the area to encourage further research. In particular, we begin with general background in combinatorial game theory, which analyzes ideal play in perfect-information games. Then we survey results about the complexity of determining ideal play in these games, and the related problems of solving puzzles, in terms of both polynomial-time algorithms and computational intractability results. Our review of background and survey of algorithmic results are by no means complete, but should serve as a useful primer.",
isbn="978-3-540-44683-5"
}

@misc{openai2019solving,
      title={Solving Rubik's Cube with a Robot Hand}, 
      author={OpenAI and Ilge Akkaya and Marcin Andrychowicz and Maciek Chociej and Mateusz Litwin and Bob McGrew and Arthur Petron and Alex Paino and Matthias Plappert and Glenn Powell and Raphael Ribas and Jonas Schneider and Nikolas Tezak and Jerry Tworek and Peter Welinder and Lilian Weng and Qiming Yuan and Wojciech Zaremba and Lei Zhang},
      year={2019},
      eprint={1910.07113},
      archivePrefix={arXiv},
      primaryClass={cs.LG}
}

@ARTICLE{8718565,
  author={De Kegel, Barbara and Haahr, Mads},
  journal={IEEE Transactions on Games}, 
  title={Procedural Puzzle Generation: A Survey}, 
  year={2020},
  volume={12},
  number={1},
  pages={21-40},
  keywords={Games;Generators;Space exploration;Taxonomy;Programming;Feature extraction;Procedural content;puzzle games},
  doi={10.1109/TG.2019.2917792}
}

@inproceedings{baral2011solving,
  title={Solving puzzles described in english by automated translation to answer set programming and learning how to do that translation},
  author={Baral, Chitta and Dzifcak, Juraj},
  booktitle={2011 AAAI Fall Symposium Series},
  year={2011}
}

@inproceedings{lecomte1999towards,
  title={Towards a minimal logic for minimalist grammars},
  author={Lecomte, Alain and Retor{\'e}, Christian},
  booktitle={Proceedings, Formal Grammar},
  volume={99},
  year={1999},
  organization={Citeseer}
}

@INPROCEEDINGS{6802604,
  author={Ghasemzadeh, Hamzeh},
  booktitle={2014 Iranian Conference on Intelligent Systems (ICIS)}, 
  title={A metaheuristic approach for solving jigsaw puzzles}, 
  year={2014},
  volume={},
  number={},
  pages={1-6},
  keywords={Accuracy;Genetic algorithms;Complexity theory;Biological cells;Sociology;Statistics;Simulated annealing;Genetic Algorithm;Simulated Annealing;Max-Min Ant Colony System;Jigsaw Puzzle},
  doi={10.1109/IranianCIS.2014.6802604}
}

@article{sun2015computational,
  title={Computational design of twisty joints and puzzles.},
  author={Sun, Timothy and Zheng, Changxi},
  journal={ACM Trans. Graph.},
  volume={34},
  number={4},
  pages={101--1},
  year={2015},
  publisher={Citeseer}
}

@INPROCEEDINGS{4219047,
  author={Salcedo-Sanz, Sancho and Ortiz-Garcia, Emilio G. and Perez-Bellido, Angel M. and Portilla-Figueras, Antonio and Yao, Xin},
  booktitle={2007 IEEE Symposium on Computational Intelligence and Games}, 
  title={Solving Japanese Puzzles with Heuristics}, 
  year={2007},
  volume={},
  number={},
  pages={224-231},
  keywords={Web pages;Books;Logic testing;Computational intelligence;Computer science;Mathematics;Telegraphy;Game theory;Heuristic algorithms;Genetic algorithms;Japanese puzzles;Nonograms;Puzzles solver;Heuristics},
  doi={10.1109/CIG.2007.368102}
}

@article{kornhauser1984coordinating,
  title={Coordinating pebble motion on graphs, the diameter of permutation groups, and applications},
  author={Kornhauser, Daniel Martin},
  year={1984}
}

@article{van2013complexity,
  title={The complexity of change.},
  author={van den Heuvel, Jan},
  journal={Surveys in combinatorics},
  volume={409},
  number={2013},
  pages={127--160},
  year={2013}
}

@inproceedings{NIPS2016_fc490ca4,
 author = {Ortega, Pedro A and Stocker, Alan A},
 booktitle = {Advances in Neural Information Processing Systems},
 editor = {D. Lee and M. Sugiyama and U. Luxburg and I. Guyon and R. Garnett},
 pages = {},
 publisher = {Curran Associates, Inc.},
 title = {Human Decision-Making under Limited Time},
 url = {https://proceedings.neurips.cc/paper_files/paper/2016/file/fc490ca45c00b1249bbe3554a4fdf6fb-Paper.pdf},
 volume = {29},
 year = {2016}
}

@inproceedings{kajiura1989solving,
  title={Solving large scale puzzles with neural networks},
  author={Kajiura, Masahiro and Akiyama, Yutaka and Anzai, Yuichiro},
  booktitle={IEEE International Workshop on Tools for Artificial Intelligence},
  pages={562--563},
  year={1989},
  organization={IEEE Computer Society}
}

@article{wolf1998study,
  title={A Study of Genetic Algorithms solving a combinatorial Puzzle},
  author={Wolf, Thomas},
  year={1998}
}

@article{hukmani2021solving,
  title={Solving Twisty Puzzles Using Parallel Q-learning.},
  author={Hukmani, Kavish and Kolekar, Sucheta and Vobugari, Sreekumar},
  journal={Engineering Letters},
  volume={29},
  number={4},
  year={2021}
}

@InProceedings{10.1007/978-981-13-1132-1_24,
author="Khemani, Chanchal
and Doshi, Jay
and Duseja, Juhi
and Shah, Krapi
and Udmale, Sandeep
and Sambhe, Vijay",
editor="Verma, Nishchal K.
and Ghosh, A. K.",
title="Solving Rubik's Cube Using Graph Theory",
booktitle="Computational Intelligence: Theories, Applications and Future Directions - Volume I",
year="2019",
publisher="Springer Singapore",
address="Singapore",
pages="301--317",
abstract="The most common application of graph theory is search problems. Using graph theory, this project aims to solve one such NP-hard problem, i.e., finding a path for a Rubik's cube to reach the solved state from a scrambled one. Rubik's cube is among one of the fascinating puzzles and solving them has been a challenge given its vast search space of 43 quintillion. This paper aims at demonstrating the application and performance of traditional search algorithms like breadth-first search, depth-limited search, and bidirectional search, and proposes a new approach to find the solution by integrating them. The proposed algorithm makes use of the fact that the God's number for a 3{\$}{\$}{\backslash}times {\$}{\$}{\texttimes}3{\$}{\$}{\backslash}times {\$}{\$}{\texttimes}3 Rubik's cube is 20, i.e., the fact that any cube scramble within the 43 quintillion states can be solved within a max of 20 moves.",
isbn="978-981-13-1132-1"
}

@article{buhay2023solving,
  title={Solving Rubik’s Cube and Ph. D. journey: A multi-faceted endeavor},
  author={Buhay, Paulyn Jayziell Sanchez and others},
  journal={International Journal of Science and Research Archive},
  volume={8},
  number={1},
  pages={043--050},
  year={2023},
  publisher={International Journal of Science and Research Archive}
}

@article{YILMAZ2023100586,
title = {Comprehensive survey of the solving puzzle problems},
journal = {Computer Science Review},
volume = {50},
pages = {100586},
year = {2023},
issn = {1574-0137},
doi = {https://doi.org/10.1016/j.cosrev.2023.100586},
url = {https://www.sciencedirect.com/science/article/pii/S1574013723000539},
author = {Seçkin Yılmaz and Vasif V. Nabiyev},
keywords = {Puzzle problems, Solving real-world jigsaw puzzle, Reconstruction of the fragmented objects, Dissection puzzles, Fragments assembly, Computer-aided reconstruction},
abstract = {Solving puzzle problems using computer-aided methods is becoming more common with applications in forensic science, restoration, banking system, and multimedia. However, only a few surveys have been published on this topic, the most recent being more than a decade old. The scope of 2D puzzle problems is extensive, and the number of computer-aided methods has increased in recent years. In this paper, we have presented a comprehensive survey to pave a roadmap for researchers dealing with puzzle problems. This study classifies 2D puzzle problems in a novel way, considering many examples such as dissection, combinatorial and double-sided puzzles and reclassifies computer-aided methods to cover the studies carried out in recent years. Various strategies (pre-grouping and global consistency approach) have been investigated to solve the puzzle problem effectively. The computer-aided methods have been examined deeply, including many recent methods related to squared jigsaw puzzles, torn photographs, banknotes, and fragmented documents, and they are compared to each other. In addition, new topics such as combining mosaic pieces and Islamic architectural motif puzzle problems have been proposed to the interest of researchers. In conclusion, our study shows many research opportunities that are not yet solved by any computer-aided method.}
}

@INPROCEEDINGS{9231594,
  author={Riggins, Paul and McPherson, David},
  booktitle={2020 IEEE Conference on Games (CoG)}, 
  title={Formal Game Grammar and Equivalence}, 
  year={2020},
  volume={},
  number={},
  pages={206-213},
  keywords={Games;Law;User interfaces;Game theory;Artificial intelligence;Grammar;Aerospace electronics;game grammar;game representation;game tree;equivalence relations;similarity measures;mathematical ludology},
  doi={10.1109/CoG47356.2020.9231594}
}

@article{10.1111/j.1467-8659.2010.01714.x,
author = {Krecklau, L. and Pavic, D. and Kobbelt, L.},
title = {Generalized Use of Non-Terminal Symbols for Procedural Modeling},
journal = {Computer Graphics Forum},
volume = {29},
number = {8},
pages = {2291-2303},
keywords = {procedural modeling, L-Systems, formal grammars, architecture, plants, I.3.6 Computer Graphics: Languages—I.3.5 Computer Graphics: Computational Geometry and Object Modeling—I.3.7 Computer Graphics: Three-Dimensional Graphics and Realism},
doi = {https://doi.org/10.1111/j.1467-8659.2010.01714.x},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2010.01714.x},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2010.01714.x},
abstract = {Abstract We present the new procedural modeling language  (Generalized Grammar), which adapts various concepts from general purpose programming languages to provide high descriptive power with well-defined semantics and a simple syntax which is easily readable even by non-programmers. The term ‘Generalized’ reflects two kinds of generalization. On the one hand, we extend the scope of previous architectural modeling languages by allowing for multiple types of non-terminal objects with domain-specific operators and attributes. On the other hand, the language accepts non-terminal symbols as parameters in modeling rules and thus enables the definition of abstract structure templates for flexible re-use within the grammar. By deriving  from the well-established programming language Python, we can make sure that our modeling language has a well-defined semantics. For illustration, we apply  to architectural as well as plant modeling to demonstrate its descriptive power with some complex examples.},
year = {2010}
}
